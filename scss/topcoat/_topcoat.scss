
/*Functions and mixins*/

@function getBorderColor($bg) {
	$darken: 0;
	@if $bg == $btn-default-bg {
		$darken:	$tc_dark_border;
	} @else {
		$darken:	$tc_darker_border;
	}

	@return darken($bg, $darken);
}

@mixin disabled {
    opacity: 0.3;
    cursor: default;
    pointer-events: none;
}

@mixin focused {
	/*border: 1px solid $tc_focus_border !important;*/
	@include box-shadow(inset 0 1px rgba(255,255,255,0.36), 0 0 0 2px $tc_focus_shadow);
	outline: 0;
	z-index: 2;
}

@mixin relief($bg: $btn-default-bg) {
	background: $bg;
	@include box-shadow(inset 0 1px rgba(white, 0.1));
	border: 1px solid getBorderColor($bg);
}

@mixin btnColor($bg) {
	@include relief($bg);
	text-shadow: 0 -1px getBorderColor($bg);

	&:hover, &:focus, &:active, &:active:focus {
		border: 1px solid getBorderColor($bg);
	}

	&:focus {
		background: $bg;
		@include focused;
	}

	&:hover {
		background: lighten($bg, 3.5%);
	}

	&:active {
		background: darken($bg, 13.7%);
		@include box-shadow(inset 0 1px rgba(0,0,0,0.05) !important);
	}
}

/*New classes*/

.focused {
	@include focused;
}

.disabled {
	@include disabled;
}

.relief {
	@include relief($btn-default-bg);
}

.relief-primary {
	@include relief($brand-primary);
}

/*Existing classes and DOM*/

html {
	font-size: $font-size-base;
}

html, body {
	margin: 0;
    padding: 0;
    height: 100%;
}

body {
    /*line-height: 20px;*/
    -webkit-font-smoothing: antialiased;
}

*:focus {
    outline-color: transparent !important;
    outline-style: none !important;
}

.btn {
	position: relative;
    display: inline-block;
    vertical-align: top;
    @include box-sizing(border-box);
    background-clip: padding-box;
    margin: 0;
	font-weight: 600;
    cursor: default;
    text-overflow: ellipsis;
    overflow: hidden;
    text-decoration: none;
    letter-spacing: 0;
    vertical-align: top;
    @include box-shadow(inset 0 1px transparent);
	border-width: 1px;
	border-style: solid;

	&-sm {
		font-weight: normal;
		padding: 0 0.563rem;
	}

	&-xs {
		font-weight: normal;
		padding: 0 0.363rem;
		font-size: 10px;

		&.glyphicon {
			width: $line-height-base + 0em;
			padding: 0;

			&.btn-link:hover, &.btn-link:focus {
				text-decoration: none;
			}
		}
	}

	&-default {
		@include btnColor($btn-default-bg);
	}

	&-primary {
		@include btnColor($brand-primary);
	}

	&-success {
		@include btnColor($brand-success);
	}

	&-info {
		@include btnColor($brand-info);
	}

	&-warning {
		@include btnColor($brand-warning);
	}

	&-danger {
		@include btnColor($brand-danger);
	}

	&-link {
		@include btnColor($btn-default-bg);

		&:not(:hover):not(:focus) {
			background: none;
			border-color: transparent !important;
			@include box-shadow(none);
		}
	}

	&:focus {
		@include focused;
	}

	&[disabled] {
		@include disabled;
	}
}

.checkbox label, .radio label {
	padding-left: 0;
	position: relative;
	display: inline-block;
	vertical-align: top;
	cursor: default;
	@include user-select(none);
	padding-top: ($line-height-computed - 16px) / 2;

	input[type="checkbox"], input[type="radio"] {
		position: absolute;
		overflow: hidden;
		padding: 0;
		border: 0;
		opacity: 0.001;
		z-index: 1;
		vertical-align: top;
		outline: none;
		margin-top: 0;
		margin-left: 0;
	}

	.checkbox-box, .radio-box {
		background-clip: padding-box;
		position: relative;
		display: inline-block;
		vertical-align: top;
		cursor: default;
		@include user-select(none);
		margin-right: 4px;

		&::after, &::before {
			content: '';
			position: absolute;
		}

		&::before {
			/*background: #595b5b;*/
			background: $tc_but_bg;
			z-index: 0 !important;
			@include relief;
		}

		&::after {
			@include box-sizing(content-box);
			opacity: 0;
		}
	}

	input[type="checkbox"]:checked + .checkbox-box:after, input[type="radio"]:checked + .radio-box:after {
		opacity: 1;
	}

	input[type="checkbox"]:active + .checkbox-box:before, input[type="radio"]:active + .radio-box:before {
		border: 1px solid darken($tc_but_bg, $tc_dark_border);
		background: darken($tc_but_bg, 13.7%);
		@include box-shadow(inset 0 1px rgba(0,0,0,0.05));
	}

	input[type="checkbox"]:focus + .checkbox-box::before, input[type="radio"]:focus + .radio-box::before {
		@include focused;
	}

	input[type="checkbox"]:disabled + .checkbox-box, input[type="radio"]:disabled + .radio-box {
		@include disabled;
	}
}

.checkbox {

	label {
		line-height: 1rem;

		input[type="checkbox"] {
			height: 1rem;
			width: 1rem;
			margin-right: -1rem;
			margin-bottom: -1rem;

			&:disabled {
				cursor: default;
			}
		}

		.checkbox-box {

			&, &::before {
				width: 1rem;
				height: 1rem;
			}

			&::before {
				/*border-radius: 3px;*/
			}

			&::after {
				top: 2px;
				left: 1px;
				width: 14px;
				height: 4px;
				background: transparent;
				border: 7px solid $input-color;
				border-width: 3px;
				border-top: none;
				border-right: none;
				border-radius: 1px;
				-webkit-transform: rotate(-50deg);
				-ms-transform: rotate(-50deg);
				transform: rotate(-50deg);
			}
		}
	}
}

.radio {

	label {
		line-height: 1.063rem;

		input[type="radio"] {
			height: 1.063rem;
			width: 1.063rem;
			margin-right: -1.063rem;
			margin-bottom: -1.063rem;
		}

		.radio-box {

			&, &::before {
				width: 1.063rem;
				height: 1.063rem;
			}

			&::before, &::after {
				border-radius: 100%;
			}

			&::after {
				width: 0.313rem;
				height: 0.313rem;
				background: $input-color;
				border: 1px solid rgba(0,0,0,0.05);
				@include box-shadow(0 1px rgba(255,255,255,0.1));
				-webkit-transform: none;
				-ms-transform: none;
				transform: none;
				top: 0.313rem;
				left: 0.313rem;
			}
		}
	}
}

.form-group *:not(.checkbox) + .checkbox, .form-group *:not(.radio) + .radio, .form-group *:not(.radio-inline) + .radio-inline, .form-group *:not(.checkbox-inline) + .checkbox-inline {
	padding-top: 6px;
}

h1, h2, h3, h4, h5, h6 {
	font-variant: small-caps;
}

.t-head {

	&::before {
		content: '';
		width: 100%;
		display: block;
		position: absolute;
		left: 0;
		border-bottom: 1px solid $hr-border;
		top: 30px;
	}

	h2, .h2 {
		background: $body-bg;
		font-weight: 300;
		margin: 10px 0 25px;
		position: relative;
		display: inline-block;
		padding-right: 10px;
	}

	&[class^='col-'], &[class*=' col-']{
		padding: 0;

		h2, .h2 {
			padding-left: 15px;
		}
	}
}

.form-control {
	letter-spacing: 0;
	padding: 0 0.563rem;
	@include box-shadow(inset 0 1px rgba(0,0,0,0.05));
	vertical-align: top;
	@include transition-duration(0s);

	&:focus {
		@include focused;

		&:not(select) {
			background: $tc_focus_bg;
			@include box-shadow(0 0 0 2px $tc_focus_shadow !important);
			color: white;
		}
	}

	&[disabled] {
		@include disabled;
	}
}

textarea.form-control {
	max-width: 100%;
}

select.form-control {
	background: $tc_but_bg;
    @include relief;
    color: white;
    text-shadow: 0 -1px 0 $tc_but_border;
    padding: 3px 20px 4px 8px;
}

fieldset[disabled] .btn, fieldset[disabled] .form-control {
	@include disabled;
}

.has-success, .has-warning, .has-error {
	.form-control, .form-control:focus {
		border-width: 1px;
	}
}

.nav-tabs {

	> li {

		&:not(.active) > a {
			color: darken($nav-tabs-active-link-hover-color, 5%);
			background-color: darken($nav-tabs-active-link-hover-bg, 5%);
			border: 1px solid $nav-tabs-border-color;
			@include box-shadow(inset 0 1px darken($tc_but_shadow, 5%));

			&:hover {
				background-color: darken($nav-tabs-active-link-hover-bg, 3%);
			}
		}

		> a {
			padding: 0px 0.563rem;
			cursor: default;
			margin-right: 0;
		}

		&.active > a {

			&, &:hover, &:focus {
				@include box-shadow(inset 0 1px $tc_but_shadow);
				/*text-shadow: 0 -1px 0 $tc_but_border;*/
				text-shadow: 0.25px 0px 0px $nav-tabs-active-link-hover-color;
			}
		}

		&:not(.disabled) + li {
			&, &.active, &:not(.active) {
				> a, > a:hover, > a:focus {
					border-left: none;
				}
			}
		}
		
		&.disabled + li {
			margin-left: -1px;
		}
	}

	+ .tab-content {
		background-color: $nav-tabs-active-link-hover-bg;
		border: 1px solid $nav-tabs-border-color;
		border-top: none;
	}
}

.navbar {
	&.navbar-default {
		@include relief;
		text-shadow: 0 -1px 0 $tc_but_border;
	}

	&.navbar-inverse {
		@extend .relief-primary;
		text-shadow: 0 -1px 0 darken($btn-primary-bg, $tc_dark_border);
	}

	&.navbar-fixed-top, &.navbar-fixed-bottom {
		border-left: none;
		border-right: none;
		&.navbar-fixed-top {
			border-top: none;
		}
		&.navbar-fixed-bottom {
			border-bottom: none;
		}
	}
}

.list-group > .list-group-item {
	padding: $list-group-item-padding;

	&:not(.active):not(.disabled) {
		@include btnColor($btn-default-bg);

		&:focus {
			@include focused;
		}
	}
}

.dropdown-menu {
	padding: 0;

	> li > a {
		@include btnColor($btn-default-bg);
		border-left: none !important;
		border-right: none !important;
		border-top-width: 0px !important;
	}

	> .divider + li > a {
		border-top-width: 1px !important;
	}

	> li:last-child > a {
		border-bottom: none;
	}

	.divider {
		margin: 2px 0;
	}
}

.pagination > li:not(.active):not(.disabled) > a {
	@include btnColor($btn-default-bg);
}

.well {
	@include relief($well-bg);
}

.breadcrumb {
	@include relief;
}

.progress {
	@include relief;

	> .progress-bar {
		@include box-shadow(inset 0 1px rgba(255, 255, 255, 0.1));
	}
}

.jumbotron {
	@include relief;
}

.panel {
	@include relief($panel-bg);
	margin-bottom: $panel-margin-bottom;

	> .panel-heading {
		@include box-shadow(inset 0 1px rgba(255, 255, 255, 0.1));
	}
}

.modal-content {
	@include relief;
}

.nav-pills > li {
	&:not(.active) > a {
		border: 1px solid transparent;

		&:hover, &:focus {
			/*@include relief;*/
			@extend .btn-link;
		}
	}

	&.active > a {
		@include btnColor($brand-primary);
	}
}

.pager li {
	&:not(.disabled) {
		> a, > span {
			@include btnColor($btn-default-bg);
		}
	}

	&.disabled {
		> a, > span {
			@include disabled;
		}
	}
}

.label, .alert {
	border-radius: 0;

	&-default {
		@include relief;
	}

	&-primary {
		@extend .relief-primary;
	}

	&-success {
		@include relief($brand-success);
	}

	&-warning {
		@include relief($brand-warning);
	}

	&-danger {
		@include relief($brand-danger);
	}

	&-info {
		@include relief($brand-info);
	}
}

.alert {
	.alert-link {
		color: darken($brand-primary, 15%);
	}
}

.text-primary,
.text-primary:hover {
	color: $link-color;
}

.text-success,
.text-success:hover {
	color: $brand-success;
}

.text-danger,
.text-danger:hover {
	color: $brand-danger;
}

.text-warning,
.text-warning:hover {
	color: $brand-warning;
}

.text-info,
.text-info:hover {
	color: $brand-info;
}

.collapsing {
	transition: none;
}

::-webkit-scrollbar {
	width: 17px;
	background: rgba(black, 0.1);
}

::-webkit-scrollbar-button {
	height: 17px;

	&:vertical {
		&:decrement {
			border-top: 0px !important;
		}
		&:increment {
			border-bottom: 0px !important;
		}
	}
	&:horizontal {
		&:decrement {
			border-left: 0px !important;
		}
		&:increment {
			border-right: 0px !important;
		}
	}
}

::-webkit-scrollbar-track {
}

::-webkit-scrollbar-track-piece {
}

::-webkit-scrollbar-thumb {
}

::-webkit-scrollbar-corner {
	background: darken($btn-default-bg, $tc_dark_border);
}

::-webkit-resizer {
	@include relief;
	/*@include btnColor($btn-default-bg);*/
	border-right: none !important;
	border-bottom: none !important;
	@include box-shadow(inset 0px -2px rgba(white, 0.2));
}

::-webkit-scrollbar-thumb, ::-webkit-scrollbar-button {
	@include btnColor($btn-default-bg);
	&:vertical {
		border-right: 0px !important;
	}
	&:horizontal {
		border-bottom: 0px !important;
	}
}